#!/usr/bin/env node
"use strict";

exports.command = {
    description: 'Import a UFO to a master'
  , arguments: '<ufo> <[project]/master>'
};
if (require.main === module) {

var requirejs = require('requirejs')
  , configure = requirejs('./node-config')
  , path = require('path')
  , program = require('commander')
  ;

configure(requirejs);

program._name = path.basename(process.argv[1]).replace('-', ' ');
program.arguments(exports.command.arguments)
    .description(exports.command.description);

requirejs([
    'Atem-MOM/errors'
  , 'Atem-IO/io/static'
  , 'Atem-MOM/cli/parseArgs'
], function (
    errors
  , io
  , parseArgs
) {
    var CommandLineError = errors.CommandLine;

    function main(sourceUFODir, projectMaster) {
        var pm = parseArgs.projectMaster(io, projectMaster)
          , project = pm[0]
          , masterName = pm[1]
          ;

        project.load();
        project.import(false, masterName, sourceUFODir, program.glyphs);
        project.save();
    }

    program.action(main);
    program.option('-g, --glyphs <glyphs>', 'A comma-separated of glyph names to import',
        function(value) {
            var glyphNames = value.split(',')
                             .map(function(item){ return item.trim(); })
                             .filter(function(item){ return !!item.length; });

            if(!glyphNames.length)
                throw new CommandLineError('The value of option "glyphs" '
                                          + 'did not produce a list of names, value was: "'
                                          + value + '" expected was a comma separated list '
                                          + 'of glyph names');
            return glyphNames;
        });
    program.parse(process.argv);
});

}
